generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model countries{
    countries_id Int @id @default(autoincrement())
    name String
      candidates   candidate[] @relation("CountryCandidates")
}

model languages{
    languages_id Int @id @default(autoincrement())
    name String
    candidates   candidate[] @relation("CandidateLanguages")
}

model technologies{
    technologies_id Int @id @default(autoincrement())
    name String
    candidates   candidate[] @relation("CandidateTechnologies")
}

model time_zone{
    time_zone_id Int @id @default(autoincrement())
    name String
    candidates   candidate[] @relation("TimeZoneCandidates")
}

model career_timeline{
  career_timeline_id Int @id @default(autoincrement())
  company_name String
  position String
  time_in_position String
  description String
  candidates   candidate[] @relation("CandidateCareerTimeline")
}

model institute{
  institute_id Int @id @default(autoincrement())
  name String
  educational_projects   educational_projects[] @relation("EducationalProjects")
}

model educational_projects{
  career_timeline_id Int @id @default(autoincrement())
  institute_id Int
  position String
  time_in_position String
  description String
  institute   institute   @relation("EducationalProjects", fields: [institute_id], references: [institute_id])
  candidates   candidate[] @relation("CandidateEducationalProjects")
}


model verify_token{
  verify_token_id Int @id @default(autoincrement())
  token String @unique
  expires_at DateTime
  users users?
}
  
model users{
    user_id Int @id @default(autoincrement())
    email String @unique
    password String
    role String
    verified Boolean
    verify_token_id Int @unique
    created_at DateTime @default(now())
    candidate candidate?
    verify_token verify_token @relation(fields: [verify_token_id], references: [verify_token_id])

}

model candidate{
    candidate_id Int @id @default(autoincrement())
    birth_day DateTime
    country_id Int
    time_zone_id Int
    motivation_text String
    languages_id Int
    technologies_id Int
    career_timeline_id Int
    educational_projects_id Int
    image String
    firstname String
    lastname String
    user_id Int @unique

    // Relations
    user users @relation(fields: [user_id], references: [user_id])
    country              countries   @relation("CountryCandidates", fields: [country_id], references: [countries_id])
    time_zone            time_zone   @relation("TimeZoneCandidates", fields: [time_zone_id], references: [time_zone_id])
    languages            languages[] @relation("CandidateLanguages")
    technologies         technologies[] @relation("CandidateTechnologies")
    career_timeline      career_timeline[] @relation("CandidateCareerTimeline")
    educational_projects educational_projects[] @relation("CandidateEducationalProjects")
}